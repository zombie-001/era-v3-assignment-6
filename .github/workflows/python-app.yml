name: Model Training Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  train:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
    
    - name: Cache MNIST dataset
      uses: actions/cache@v3
      with:
        path: data
        key: mnist-dataset-v1
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run architecture tests
      run: |
        pytest tests/test_model.py -v
    
    - name: Full Training
      run: |
        # Create optimized training script for CPU
        cat > train_full.py << EOL
        import torch
        from eva3_session_6_assignment_ import SimpleCNN, train_model
        
        # Force CPU
        torch.set_num_threads(4)  # Optimize CPU threads
        
        # Run full training with CPU optimizations
        model, history = train_model(num_epochs=20)
        EOL
        
        # Run full training
        python train_full.py
    
    - name: Upload trained models
      uses: actions/upload-artifact@v4
      with:
        name: trained-models
        path: |
          models/*.pth
          augmented_samples/
        retention-days: 7

    - name: Training Summary
      run: |
        echo "Full Training Completed"
        ls -l models/
        echo "Check artifacts for trained models"